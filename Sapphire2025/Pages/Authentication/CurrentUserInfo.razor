@inject InteractiveService mvarInteractiveService
@namespace Sapphire2025.Pages.Authentication

<div class="profile-section mt-auto p-4">
	<div class="d-flex align-items-center">
		<div class="rounded-circle" style="height:60px">
			<svg xmlns="http://www.w3.org/2000/svg" height="60px" width="60px"
			viewBox="0 -960 960 960"
			alt="profile" fill="grey">
				<path d="@userIcon" />
			</svg>
		</div>
		<!--<img src="https://randomuser.me/api/portraits/women/70.jpg" style="height:60px" class="rounded-circle" alt="Profile">-->

		<div class="ms-3 profile-info">
			<h6 class="text-white mb-0">@userString</h6>
			@if(activeSession)
			{
				<a href="/auth/logout" class="text-white mb-1">Cerrar Sesión</a>
			}
			else
			{
				<a href="/auth/login" class="text-white mb-1">Abrir Sesión</a>
			}
			<!--<small class="text-muted">Admin</small>-->
		</div>
	</div>
</div>

@code {
	//Este componente muestra los datos de la sesión actual leyendo desde
	//el almacenamiento interno.	
	[CascadingParameter]
	public SessionModel? Session{ get; set; }

	protected async override Task OnInitializedAsync()
	{

	}

	private bool activeSession { get => null != Session; }

	private string userString
	{
		get
		{
			if(null!=Session)
			{
				if (null == Session.User)
					return "Usuario desconocido";
				else
					return Session.User.Name;
			}
			return string.Empty;
		}
	}
	private string userIcon
	{ 
		get
		{
			if (null == Session)
				return AuthenticationClient.userIconHtml(new List<Sapphire2025Models.Common.UserRole>(), "gray");
			else
				return AuthenticationClient.userIconHtml(Session.Roles, "gray");
		}
	}
}
