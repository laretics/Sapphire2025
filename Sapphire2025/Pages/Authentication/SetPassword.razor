@page "/auth/setpassword/{UserName}"
@inject IntStorageService mvarClientStorage
@inject AuthenticationClient mvarAuthenticationClient
@inject NavigationManager mvarNavigator
<PageTitle>Contraseña</PageTitle>
<EditForm Model="@mvarLoginModel" OnValidSubmit="RegisterCall">
	<div class="mb-3">
		<h2>Asignación de contraseña para @UserName</h2>
		<p>La contraseña para este usuario está vacía. Por favor, asigne una nueva contraseña.</p>
	</div>
	<div class="mb-3">
		<label for="pwd" class="form-label">Contraseña</label>
		<PasswordInput id="pwd" @bind-Value="mvarLoginModel.Password" class="form-control" />
		<ValidationMessage For="@(() => mvarLoginModel.Password)" />
	</div>
	<div class="mb-3">
		<label for="pwd2" class="form-label">Confirmar Contraseña</label>
		<PasswordInput id="pwd2" @bind-Value="mvarConfirmPassword" class="form-control" />
		<ValidationMessage For="@(() => mvarConfirmPassword)" />
	</div>
	<Button Class="btn btn-primary" @onclick="RegisterCall">Iniciar Sesión</Button>
</EditForm>
<ModalDialog @ref="mvarModal" />

@code {
	[Parameter]
	public string? UserName{ get; set; } //Nombre de usuario que paso como parámetro.
	private ExtendedUserModel.SetPasswordDataMessage mvarLoginModel = new ExtendedUserModel.SetPasswordDataMessage();
	private ModalDialog mvarModal { get; set; } = new ModalDialog();
	private string mvarConfirmPassword { get; set; } = string.Empty;
	protected override void OnParametersSet()
	{
		if(null==UserName)
			mvarLoginModel.UserName = string.Empty;
		else
			mvarLoginModel.UserName = UserName;
		base.OnParametersSet();
	}

	private async Task RegisterCall()
	{
		if(null!=mvarLoginModel.Password && mvarLoginModel.Password.Equals(mvarConfirmPassword))
		{
			bool resultado = await mvarAuthenticationClient.sendSetPassword(mvarLoginModel);
			if (resultado)
			{
				await mvarModal.show(
					"Validación",
					"Contraseña cambiada con éxito. Inicie sesión.",
					"Iniciar sesión");
				mvarNavigator.NavigateTo("/auth/login"); //Vuelvo a intentar el login.
			}
			else
			{
				await mvarModal.show(
					"Error de registro",
					"No ha sido posible establecer la contraseña debido a un error interno. Póngase en contacto con el administrador.",
					"Reintentar");
				mvarNavigator.NavigateTo("/");
			}			
		}
		else
		{
			await mvarModal.show(
					"Error de registro",
					"La contraseña no coincide con la confirmación. Compruebe la contraseña tecleada e inténtelo de nuevo.",
					"Reintentar");
		}
	}
}
