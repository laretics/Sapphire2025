@inject NavigationManager mvarNavegador
@if(matchRoles)
{
    <div class="sidebar-link @selText text-decoration-none p-3"
    title="@Tooltip"
    @onclick="OnClickHandler">
        <i class="@Image me-3"></i>
        @if (null == Badge)
        {
            <span class="hide-on-collapse">@Caption</span>
        }
        else
        {
            <span class="hide-on-collapse">
                @Caption
                <span class="badge bg-info hide-on-collapse">@Badge</span>
            </span>
        }
    </div>
}
@code {
    [CascadingParameter]
    public SessionModel? Session{ get; set; }
    [Parameter]
    public bool Selected{ get; set; }
    [Parameter]
    public string? Caption{ get; set; }
    [Parameter]
    public string? Image{ get; set; }
    [Parameter]
    public string? Badge { get; set; }
    [Parameter]
	public string? Link { get; set; }
    [Parameter]
	public string? Tooltip { get; set; }
    [Parameter]
    public EventCallback OnClick{ get ; set; }
    [Parameter]
    public List<Sapphire2025Models.Common.UserRole>? Roles{ get; set; }

	private void OnClickHandler()
	{
		if (null != Link)
		{
			mvarNavegador.NavigateTo(Link);
		}        
		if (OnClick.HasDelegate)
		{
			OnClick.InvokeAsync();
		}
	}

    private string selText{ get => this.Selected ? "active" : ""; }
    private bool matchRoles
    {
        get
        {
            if (null == Session || Session.Roles.Count < 1)
                return false;
            if(null!=Roles &&  Roles.Count>0)
            {
                foreach(Sapphire2025Models.Common.UserRole currentRole in Session.Roles)
                {
                    foreach(Sapphire2025Models.Common.UserRole thisRole in Roles)
                    {
                        if (currentRole.Equals(thisRole)) return true;
                    }
                }
                return false;
            }
            return true;
        }
    }
}
