// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZafiroGmao.Data;

#nullable disable

namespace ZafiroGmao.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241209110816_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ZafiroGmao.Data.Models.ActionRecord", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Campaign")
                        .HasColumnType("bit");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Corrective")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Terminated")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TrainId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Guid");

                    b.ToTable("ActionRecords");
                });

            modelBuilder.Entity("ZafiroGmao.Data.Models.ActionRecordElement", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActionRecordOperationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("recordStatusInternal")
                        .HasColumnType("tinyint");

                    b.HasKey("Guid");

                    b.ToTable("ActionRecordElements");
                });

            modelBuilder.Entity("ZafiroGmao.Data.Models.ActionRecordOperation", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActionRecordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Operation")
                        .HasColumnType("tinyint");

                    b.Property<Guid>("ServiceParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TrainPartId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Guid");

                    b.ToTable("ActionRecordOperations");
                });

            modelBuilder.Entity("ZafiroGmao.Data.Models.SFMUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("CF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TelegramId")
                        .HasColumnType("bigint");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ZafiroGmao.Data.Models.StatusChange", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TrainId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("mvarOperationId")
                        .HasColumnType("tinyint");

                    b.HasKey("Guid");

                    b.ToTable("StatusChanges");
                });

            modelBuilder.Entity("ZafiroGmao.Data.Models.Train", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GmaoId")
                        .HasColumnType("int");

                    b.Property<byte>("LastStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameCloud")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("lastChange")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Guid");

                    b.ToTable("Trains");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("8d9fd4fa-c955-47a6-8a2f-50fc507752aa"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "7101-7102",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("244c09a6-3196-4444-8686-6bc5fad6eed0"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "7103-7104",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("a38abd87-d91c-4cc2-8239-c7c9adaea689"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "7105-7106",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("9939f087-f0f4-43e4-96ba-7761db8fd16f"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "7107-7108",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("01fc72c2-bdf5-433b-8137-7b7888675133"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "7109-7110",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("9454da68-34ef-488f-a8ab-78fb210ea32f"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "7111-7112",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("0c937da8-75ac-4c67-80a5-43193fdde141"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "8101-8102",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("44baaa40-2506-4fdb-97d1-0257ddd7072e"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "8103-8104",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("52bd59cd-ce9b-49f4-bad9-e0326ed8dbf8"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "8105-8106",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("99e7f464-7ef4-4cfa-98d9-40315f57f54d"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "8107-8108",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("0c531df0-c72e-421a-bc55-35b3ba8b375f"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "8109-8110",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("af659352-4a8e-4273-b34f-39e7c11b68f9"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "8111-8112",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("8f9e5054-e51b-4f01-bb49-c2269e5e2f95"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "8113-8114",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("a7f27f7e-632b-41b0-b28e-d23bc3308967"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "8115-8116",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("3a1e215d-1c4f-4824-b5db-3f57d8fda2c8"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "8117-8118",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("d0e1f33a-71d2-4571-86fb-b1a08db741ba"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "8119-8120",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("a57b5084-6f91-43f6-9af3-3ba7c52faf76"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "8121-8122",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("87050346-775d-4293-95bd-61393dff8354"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "8123-8124",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("514cc523-2e54-41c9-aff8-191f6bc9c5e6"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "8125-8126",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("fc3c11c2-16c7-4c79-b28f-aff615050076"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "9101-9102",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("3aa8813c-b932-4f04-a561-bc9bbd0177d0"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "9103-9104",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("10b390f5-04d8-4df5-8ddb-807eefc22006"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "9105-9106",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("8f11e9f9-8e49-46ac-8e1e-de0c30559326"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "9107-9108",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("38672cc7-a7db-4fc1-ba4b-c42e7d8a4790"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "9109-9110",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("c7f59ddb-6df5-48c9-952b-d89af5088b7f"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "9111-9112",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("3172ea3f-8eac-4ee7-9efd-8558f5edaac4"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "1101-1102",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("26794ede-f53b-4acf-8443-1dfa856aaba8"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "1103-1104",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("515dd247-271d-4c3e-aabb-32192cfe7812"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "1105-1106",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("61ba1f9a-d200-444d-b333-b579b5509b54"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "1107-1108",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Guid = new Guid("2d804345-4872-4f77-90d3-9519a05b5e49"),
                            Comment = "",
                            GmaoId = 0,
                            LastStatus = (byte)0,
                            Name = "1109-1110",
                            NameCloud = "",
                            lastChange = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ZafiroGmao.Data.Models.SFMUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ZafiroGmao.Data.Models.SFMUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZafiroGmao.Data.Models.SFMUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ZafiroGmao.Data.Models.SFMUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
